{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  cartState: 0\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      if (state.counter === 0) {\n        return;\n      }\n\n      state.counter--;\n    },\n\n    addToCart(state) {\n      state.cartState = state.counter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/redux-advanced/src/components/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","cartState","counterSlice","name","initialState","reducers","increment","state","decrement","addToCart","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,SAAS,EAAE;AAAzB,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAKRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACf,UAAIA,KAAK,CAACP,OAAN,KAAkB,CAAtB,EAAyB;AACvB;AACD;;AAEDO,MAAAA,KAAK,CAACP,OAAN;AACD,KAXO;;AAaRS,IAAAA,SAAS,CAACF,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,SAAN,GAAkBM,KAAK,CAACP,OAAxB;AACD;;AAfO;AAHqB,CAAD,CAAhC;AAsBA,MAAMU,KAAK,GAAGZ,cAAc,CAAC;AAC3Ba,EAAAA,OAAO,EAAET,YAAY,CAACS;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGV,YAAY,CAACW,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, cartState: 0 };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      if (state.counter === 0) {\n        return;\n      }\n\n      state.counter--;\n    },\n\n    addToCart(state) {\n      state.cartState = state.counter;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}