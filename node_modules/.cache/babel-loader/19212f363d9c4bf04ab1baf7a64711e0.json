{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  cartState: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const payloadItem = action.payload;\n      const existingItem = state.items.find(item => item.id === payloadItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: payloadItem.id,\n          price: payloadItem.price,\n          quantity: 1,\n          totalPrice: payloadItem.price,\n          title: payloadItem.title\n        });\n      } else {\n        state.items[existingItem].totalQuantity++;\n        state.itemsexistingItem.totalPrice = existingItem.totalPrice + payloadItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/redux-advanced/src/components/store/cart-slice.js"],"names":["createSlice","initialCartState","items","totalQuantity","cartState","cartSlice","name","initialState","reducers","addItemToCart","state","action","payloadItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","itemsexistingItem","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,aAAa,EAAE,CAFQ;AAGvBC,EAAAA,SAAS,EAAE;AAHY,CAAzB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEN,gBAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,WAAW,GAAGD,MAAM,CAACE,OAA3B;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAN,CAAYa,IAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,WAAW,CAACK,EADf,CAArB;AAGAP,MAAAA,KAAK,CAACP,aAAN;;AAEA,UAAI,CAACW,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACR,KAAN,CAAYgB,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEL,WAAW,CAACK,EADD;AAEfE,UAAAA,KAAK,EAAEP,WAAW,CAACO,KAFJ;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAET,WAAW,CAACO,KAJT;AAKfG,UAAAA,KAAK,EAAEV,WAAW,CAACU;AALJ,SAAjB;AAOD,OARD,MAQO;AACLZ,QAAAA,KAAK,CAACR,KAAN,CAAYY,YAAZ,EAA0BX,aAA1B;AACAO,QAAAA,KAAK,CAACa,iBAAN,CAAwBF,UAAxB,GACEP,YAAY,CAACO,UAAb,GAA0BT,WAAW,CAACO,KADxC;AAED;AACF,KArBO;;AAuBRK,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;AACAP,MAAAA,KAAK,CAACP,aAAN;;AACA,UAAIW,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;AAC/BV,QAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYuB,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;AACD;AACF;;AAjCO;AAHkB,CAAD,CAA7B;AAwCA,OAAO,MAAMO,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AAEP,eAAetB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  cartState: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const payloadItem = action.payload;\n      const existingItem = state.items.find(\n        (item) => item.id === payloadItem.id\n      );\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: payloadItem.id,\n          price: payloadItem.price,\n          quantity: 1,\n          totalPrice: payloadItem.price,\n          title: payloadItem.title,\n        });\n      } else {\n        state.items[existingItem].totalQuantity++;\n        state.itemsexistingItem.totalPrice =\n          existingItem.totalPrice + payloadItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}