{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  cartState: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const payloadItem = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.title === payloadItem.title);\n      const existingCartItem = state.items[existingItemIndex];\n\n      if (existingCartItem) {\n        const updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount + payloadItem.quantity\n        };\n        state.items[existingCartItem] = updatedItem;\n      } else {\n        state.items.concat(payloadItem);\n        state.totalQuantity;\n        console.log(state.items);\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      if (state.totalQuantity === 0) {\n        state.items.filter(item => item !== action.payload);\n        return;\n      }\n\n      state.totalQuantity--;\n      state.totalQuantity--;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/redux-advanced/src/components/store/cart-slice.js"],"names":["createSlice","initialCartState","items","totalQuantity","cartState","cartSlice","name","initialState","reducers","addItemToCart","state","action","payloadItem","payload","existingItemIndex","findIndex","item","title","existingCartItem","updatedItem","amount","quantity","concat","console","log","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,aAAa,EAAE,CAFQ;AAGvBC,EAAAA,SAAS,EAAE;AAHY,CAAzB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEN,gBAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,WAAW,GAAGD,MAAM,CAACE,OAA3B;AACA,YAAMC,iBAAiB,GAAGJ,KAAK,CAACR,KAAN,CAAYa,SAAZ,CACvBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeL,WAAW,CAACK,KADb,CAA1B;AAIA,YAAMC,gBAAgB,GAAGR,KAAK,CAACR,KAAN,CAAYY,iBAAZ,CAAzB;;AAEA,UAAII,gBAAJ,EAAsB;AACpB,cAAMC,WAAW,GAAG,EAClB,GAAGD,gBADe;AAElBE,UAAAA,MAAM,EAAEF,gBAAgB,CAACE,MAAjB,GAA0BR,WAAW,CAACS;AAF5B,SAApB;AAKAX,QAAAA,KAAK,CAACR,KAAN,CAAYgB,gBAAZ,IAAgCC,WAAhC;AACD,OAPD,MAOO;AACHT,QAAAA,KAAK,CAACR,KAAN,CAAYoB,MAAZ,CAAmBV,WAAnB;AACAF,QAAAA,KAAK,CAACP,aAAN;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACR,KAAlB;AACH;AACF,KArBO;;AAuBRuB,IAAAA,kBAAkB,CAACf,KAAD,EAAQC,MAAR,EAAgB;AAChC,UAAID,KAAK,CAACP,aAAN,KAAwB,CAA5B,EAA+B;AAC7BO,QAAAA,KAAK,CAACR,KAAN,CAAYwB,MAAZ,CAAoBV,IAAD,IAAUA,IAAI,KAAKL,MAAM,CAACE,OAA7C;AACA;AACD;;AACDH,MAAAA,KAAK,CAACP,aAAN;AAEAO,MAAAA,KAAK,CAACP,aAAN;AACD;;AA/BO;AAHkB,CAAD,CAA7B;AAsCA,OAAO,MAAMwB,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AAEP,eAAevB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  cartState: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const payloadItem = action.payload;\n      const existingItemIndex = state.items.findIndex(\n        (item) => item.title === payloadItem.title\n      );\n\n      const existingCartItem = state.items[existingItemIndex];\n\n      if (existingCartItem) {\n        const updatedItem = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + payloadItem.quantity,\n        };\n\n        state.items[existingCartItem] = updatedItem;\n      } else {\n          state.items.concat(payloadItem);\n          state.totalQuantity \n          console.log(state.items);\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      if (state.totalQuantity === 0) {\n        state.items.filter((item) => item !== action.payload);\n        return;\n      }\n      state.totalQuantity--;\n\n      state.totalQuantity--;\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}