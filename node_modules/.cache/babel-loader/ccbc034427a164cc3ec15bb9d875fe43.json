{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  cartState: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const payloadItem = action.payload;\n      const existingItem = state.items.find(item => item.id === payloadItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: payloadItem.id,\n          price: payloadItem.price\n        });\n      } //   if (existingCartItem) {\n      //     const updatedItem = {\n      //       ...existingCartItem,\n      //       amount: existingCartItem.amount + payloadItem.quantity,\n      //     };\n      //       state.items[existingCartItem] = updatedItem;\n      //   } else {\n      //       state.items.concat(payloadItem);\n      //       state.totalQuantity++\n      //   }\n\n    },\n\n    removeItemFromCart(state, action) {\n      if (state.totalQuantity === 0) {\n        state.items.filter(item => item !== action.payload);\n        return;\n      }\n\n      state.totalQuantity--;\n      state.totalQuantity--;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/redux-advanced/src/components/store/cart-slice.js"],"names":["createSlice","initialCartState","items","totalQuantity","cartState","cartSlice","name","initialState","reducers","addItemToCart","state","action","payloadItem","payload","existingItem","find","item","id","push","price","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,aAAa,EAAE,CAFQ;AAGvBC,EAAAA,SAAS,EAAE;AAHY,CAAzB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEN,gBAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,WAAW,GAAGD,MAAM,CAACE,OAA3B;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAN,CAAYa,IAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,WAAW,CAACK,EADf,CAArB;;AAII,UAAI,CAACH,YAAL,EAAmB;AACfJ,QAAAA,KAAK,CAACR,KAAN,CAAYgB,IAAZ,CAAiB;AAACD,UAAAA,EAAE,EAAEL,WAAW,CAACK,EAAjB;AAAqBE,UAAAA,KAAK,EAAEP,WAAW,CAACO;AAAxC,SAAjB;AACH,OARsB,CAU7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACC,KAtBO;;AAwBRC,IAAAA,kBAAkB,CAACV,KAAD,EAAQC,MAAR,EAAgB;AAChC,UAAID,KAAK,CAACP,aAAN,KAAwB,CAA5B,EAA+B;AAC7BO,QAAAA,KAAK,CAACR,KAAN,CAAYmB,MAAZ,CAAoBL,IAAD,IAAUA,IAAI,KAAKL,MAAM,CAACE,OAA7C;AACA;AACD;;AACDH,MAAAA,KAAK,CAACP,aAAN;AAEAO,MAAAA,KAAK,CAACP,aAAN;AACD;;AAhCO;AAHkB,CAAD,CAA7B;AAuCA,OAAO,MAAMmB,WAAW,GAAGjB,SAAS,CAACkB,OAA9B;AAEP,eAAelB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  cartState: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const payloadItem = action.payload;\n      const existingItem = state.items.find(\n        (item) => item.id === payloadItem.id\n      );\n          \n          if (!existingItem) {\n              state.items.push({id: payloadItem.id, price: payloadItem.price, })\n          }\n\n    //   if (existingCartItem) {\n    //     const updatedItem = {\n    //       ...existingCartItem,\n    //       amount: existingCartItem.amount + payloadItem.quantity,\n    //     };\n\n    //       state.items[existingCartItem] = updatedItem;\n    //   } else {\n    //       state.items.concat(payloadItem);\n    //       state.totalQuantity++\n    //   }\n    },\n\n    removeItemFromCart(state, action) {\n      if (state.totalQuantity === 0) {\n        state.items.filter((item) => item !== action.payload);\n        return;\n      }\n      state.totalQuantity--;\n\n      state.totalQuantity--;\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}